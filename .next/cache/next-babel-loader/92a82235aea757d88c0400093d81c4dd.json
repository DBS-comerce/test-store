{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dima/projects/test-store/src/components/Home/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, Col, Container, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { loadItemsData, loadCategoriesData } from '../../actions/items';\nimport { addItemToCart, deleteItemFromCart } from '../../actions/cart';\n\nfunction Home(props) {\n  useEffect(() => {\n    props.loadItemsData();\n    props.loadCategoriesData();\n  }, []);\n  const {\n    0: dropdownOpen,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: filteredItems,\n    1: setFilteredItems\n  } = useState([]);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const frontendFilter = id => {\n    console.log(id);\n    const updatedItems = props.items && props.items.filter(item => item.categories.includes(id)) || [];\n    setFilteredItems(prevState => {\n      console.log(updatedItems);\n      return _objectSpread({}, prevState, {}, updatedItems);\n    });\n  };\n\n  const itemsList = filteredItems.length > 0 ? filteredItems : props.items;\n  const items = itemsList && itemsList.map(item => __jsx(Col, {\n    key: item.name,\n    sm: \"3\",\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/item?id=\".concat(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, item.name))), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, item.descr), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"\".concat(item.cost, \" $\")), props.cartItems && props.cartItems.filter(cartItem => cartItem.id === item.id).length > 0 ? __jsx(Button, {\n    color: \"danger\",\n    onClick: () => props.deleteItemFromCart(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"REMOVE FROM CART\") : __jsx(Button, {\n    color: \"primary\",\n    onClick: () => props.addItemToCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"ADD TO CART\"))));\n  const filterItems = props.categories && props.categories.map(category => __jsx(DropdownItem, {\n    key: category.id,\n    onClick: () => frontendFilter(category.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, category.title));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, props.items ? __jsx(React.Fragment, null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonDropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, __jsx(DropdownToggle, {\n    style: {\n      marginLeft: '10px'\n    },\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Filter by\"), __jsx(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, __jsx(DropdownItem, {\n    onClick: () => setFilteredItems([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, \"---\"), filterItems))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, items)) : null);\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items.items,\n    categories: state.items.categories,\n    cartItems: state.cart.items\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  loadItemsData,\n  addItemToCart,\n  loadCategoriesData,\n  deleteItemFromCart\n});\nexport default connector(Home);","map":{"version":3,"sources":["/home/dima/projects/test-store/src/components/Home/index.tsx"],"names":["React","useEffect","useState","Card","Button","CardTitle","CardText","Row","Col","Container","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","connect","Link","loadItemsData","loadCategoriesData","addItemToCart","deleteItemFromCart","Home","props","dropdownOpen","setOpen","filteredItems","setFilteredItems","toggle","frontendFilter","id","console","log","updatedItems","items","filter","item","categories","includes","prevState","itemsList","length","map","name","padding","cursor","descr","cost","cartItems","cartItem","filterItems","category","title","marginLeft","mapStateToProps","state","cart","connector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Card,\n    Button,\n    CardTitle,\n    CardText,\n    Row,\n    Col,\n    Container,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Link from 'next/link';\nimport { loadItemsData, loadCategoriesData } from '../../actions/items';\nimport { Item, Category } from '../../reducers/types';\nimport { addItemToCart, deleteItemFromCart } from '../../actions/cart';\nimport { RootState } from '../../reducers';\n\ntype HomeProp = PropsFromRedux & {\n    children: JSX.Element[] | JSX.Element;\n};\n\nfunction Home(props: HomeProp): JSX.Element {\n    useEffect(() => {\n        props.loadItemsData();\n        props.loadCategoriesData();\n    }, []);\n\n    const [dropdownOpen, setOpen] = useState(false);\n    const [filteredItems, setFilteredItems] = useState([]);\n\n    const toggle = (): void => setOpen(!dropdownOpen);\n\n    const frontendFilter = (id: number): void => {\n        console.log(id);\n        const updatedItems = (props.items && props.items.filter((item: Item) => item.categories.includes(id))) || [];\n        setFilteredItems((prevState: any | Item[]) => {\n            console.log(updatedItems);\n            return { ...prevState, ...updatedItems };\n        });\n    };\n\n    const itemsList = filteredItems.length > 0 ? filteredItems : props.items;\n    const items =\n        itemsList &&\n        itemsList.map((item: Item) => (\n            <Col key={item.name} sm=\"3\" style={{ padding: '10px' }}>\n                <Card body>\n                    <CardTitle>\n                        <Link href={`/item?id=${item.id}`}>\n                            <h4 style={{ cursor: 'pointer' }}>{item.name}</h4>\n                        </Link>\n                    </CardTitle>\n                    <CardText>{item.descr}</CardText>\n                    <CardText>{`${item.cost} $`}</CardText>\n                    {props.cartItems &&\n                    props.cartItems.filter((cartItem: Item) => cartItem.id === item.id).length > 0 ? (\n                        <Button color=\"danger\" onClick={() => props.deleteItemFromCart(item.id)}>\n                            REMOVE FROM CART\n                        </Button>\n                    ) : (\n                        <Button color=\"primary\" onClick={() => props.addItemToCart(item)}>\n                            ADD TO CART\n                        </Button>\n                    )}\n                </Card>\n            </Col>\n        ));\n\n    const filterItems =\n        props.categories &&\n        props.categories.map((category: Category) => (\n            <DropdownItem key={category.id} onClick={(): void => frontendFilter(category.id)}>\n                {category.title}\n            </DropdownItem>\n        ));\n\n    return (\n        <Container>\n            {props.items ? (\n                <>\n                    <Row>\n                        <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                            <DropdownToggle style={{ marginLeft: '10px' }} caret>\n                                Filter by\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={(): void => setFilteredItems([])}>---</DropdownItem>\n                                {filterItems}\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </Row>\n                    <Row>{items}</Row>\n                </>\n            ) : null}\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state: RootState): any => {\n    return {\n        items: state.items.items,\n        categories: state.items.categories,\n        cartItems: state.cart.items,\n    };\n};\n\nconst connector = connect(mapStateToProps, { loadItemsData, addItemToCart, loadCategoriesData, deleteItemFromCart });\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Home);\n"]},"metadata":{},"sourceType":"module"}
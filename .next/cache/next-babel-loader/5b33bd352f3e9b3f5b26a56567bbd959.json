{"ast":null,"code":"var _jsxFileName = \"/home/dima/projects/test-store/src/components/Home/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, Col, Container, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loadItemsData, loadCategoriesData, filterItems } from '../../actions/items';\nimport { addItemToCart } from '../../actions/cart';\n\nfunction Home(props) {\n  useEffect(() => {\n    props.loadItemsData();\n    props.loadCategoriesData();\n  }, []);\n  const {\n    0: dropdownOpen,\n    1: setOpen\n  } = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  console.log(props);\n  const items = props.items.map(item => __jsx(Col, {\n    key: item.name,\n    sm: \"4\",\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, item.name)), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, item.descr), __jsx(Button, {\n    onClick: () => props.addItemToCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"ADD TO CART\"))));\n  const filterItems = props.categories.map(category => __jsx(DropdownItem, {\n    key: category.id,\n    onClick: () => props.filterItems(category.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, category.title));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(ButtonDropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Filter by\"), __jsx(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, filterItems))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, items));\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    items: state.items.items,\n    categories: state.items.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadItemsData,\n  addItemToCart,\n  loadCategoriesData,\n  filterItems\n})(Home);","map":{"version":3,"sources":["/home/dima/projects/test-store/src/components/Home/index.tsx"],"names":["React","useEffect","useState","Card","Button","CardTitle","CardText","Row","Col","Container","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","connect","loadItemsData","loadCategoriesData","filterItems","addItemToCart","Home","props","dropdownOpen","setOpen","toggle","console","log","items","map","item","name","padding","descr","categories","category","id","title","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Card,\n    Button,\n    CardTitle,\n    CardText,\n    Row,\n    Col,\n    Container,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loadItemsData, loadCategoriesData, filterItems } from '../../actions/items';\nimport { Item, Category } from '../../reducers/types';\nimport { addItemToCart } from '../../actions/cart';\n\nfunction Home(props: any): JSX.Element {\n    useEffect(() => {\n        props.loadItemsData();\n        props.loadCategoriesData();\n    }, []);\n\n    const [dropdownOpen, setOpen] = useState(false);\n\n    const toggle = (): void => setOpen(!dropdownOpen);\n\n    console.log(props);\n    const items = props.items.map((item: Item) => (\n        <Col key={item.name} sm=\"4\" style={{ padding: '10px' }}>\n            <Card body>\n                <CardTitle>\n                    <h4>{item.name}</h4>\n                </CardTitle>\n                <CardText>{item.descr}</CardText>\n                <Button onClick={(): void => props.addItemToCart(item)}>ADD TO CART</Button>\n            </Card>\n        </Col>\n    ));\n\n    const filterItems = props.categories.map((category: Category) => (\n        <DropdownItem key={category.id} onClick={() => props.filterItems(category.id)}>\n            {category.title}\n        </DropdownItem>\n    ));\n\n    return (\n        <Container>\n            <Row>\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>Filter by</DropdownToggle>\n                    <DropdownMenu>{filterItems}</DropdownMenu>\n                </ButtonDropdown>\n            </Row>\n            <Row>{items}</Row>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    console.log(state);\n    return {\n        items: state.items.items,\n        categories: state.items.categories,\n    };\n};\n\nexport default connect(mapStateToProps, { loadItemsData, addItemToCart, loadCategoriesData, filterItems })(Home);\n"]},"metadata":{},"sourceType":"module"}
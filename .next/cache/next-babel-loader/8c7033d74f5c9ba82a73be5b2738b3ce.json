{"ast":null,"code":"var _jsxFileName = \"/home/dima/projects/test-store/src/components/Home/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loadItemsData } from '../../actions/items';\nimport { addItemToCart } from '../../actions/cart'; // const addToCart = (item: Item): void => {\n//     addItemToCart(item);\n// };\n\nfunction Home(props) {\n  useEffect(() => {\n    props.loadItemsData();\n  }, []);\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  console.log(props);\n  const items = props.items.map(item => __jsx(Col, {\n    key: item.name,\n    sm: \"4\",\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, item.name)), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, item.descr), __jsx(Button, {\n    onClick: () => props.addItemToCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"ADD TO CART\"))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(ButtonDropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Button Dropdown\"), __jsx(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(DropdownItem, {\n    header: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Header\"), __jsx(DropdownItem, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Action\"), __jsx(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Another Action\"), __jsx(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), __jsx(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Another Action\")))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, items));\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadItemsData,\n  addItemToCart\n})(Home);","map":{"version":3,"sources":["/home/dima/projects/test-store/src/components/Home/index.tsx"],"names":["React","useEffect","Card","Button","CardTitle","CardText","Row","Col","Container","connect","loadItemsData","addItemToCart","Home","props","dropdownOpen","setOpen","useState","toggle","console","log","items","map","item","name","padding","descr","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loadItemsData } from '../../actions/items';\nimport { Item } from '../../reducers/types';\nimport { addItemToCart } from '../../actions/cart';\n\n// const addToCart = (item: Item): void => {\n//     addItemToCart(item);\n// };\n\nfunction Home(props: any): JSX.Element {\n    useEffect(() => {\n        props.loadItemsData();\n    }, []);\n\n    const [dropdownOpen, setOpen] = useState(false);\n\n    const toggle = () => setOpen(!dropdownOpen);\n\n    console.log(props);\n    const items = props.items.map((item: Item) => (\n        <Col key={item.name} sm=\"4\" style={{ padding: '10px' }}>\n            <Card body>\n                <CardTitle>\n                    <h4>{item.name}</h4>\n                </CardTitle>\n                <CardText>{item.descr}</CardText>\n                <Button onClick={(): void => props.addItemToCart(item)}>ADD TO CART</Button>\n            </Card>\n        </Col>\n    ));\n\n    return (\n        <Container>\n            <Row>\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>Button Dropdown</DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem header>Header</DropdownItem>\n                        <DropdownItem disabled>Action</DropdownItem>\n                        <DropdownItem>Another Action</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem>Another Action</DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n            </Row>\n            <Row>{items}</Row>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        items: state.items.items,\n    };\n};\n\nexport default connect(mapStateToProps, { loadItemsData, addItemToCart })(Home);\n"]},"metadata":{},"sourceType":"module"}
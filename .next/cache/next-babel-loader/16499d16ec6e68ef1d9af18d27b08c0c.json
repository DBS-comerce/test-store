{"ast":null,"code":"var _jsxFileName = \"/home/dima/projects/test-store/src/components/Item/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, CardBody, Container, CardSubtitle } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { deleteItemFromCart, addItemToCart } from '../../actions/cart';\nimport { loadItemsData } from '../../actions/items';\n\nfunction Item(props) {\n  useEffect(() => {\n    props.loadItemsData();\n  }, []);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(id);\n  const item = id && props.items.filter(item => item.id === parseInt(id[0]))[0] || [];\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, item.name)), __jsx(CardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, item.descr), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, item.cost + '$'), props.cartItems.filter(cartItem => cartItem.id === item.id).length > 0 ? __jsx(Button, {\n    color: \"danger\",\n    onClick: () => props.deleteItemFromCart(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, \"REMOVE FROM CART\") : __jsx(Button, {\n    onClick: () => props.addItemToCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"ADD TO CART\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items.items,\n    cartItems: state.cart.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadItemsData,\n  deleteItemFromCart,\n  addItemToCart\n})(Item);","map":{"version":3,"sources":["/home/dima/projects/test-store/src/components/Item/index.tsx"],"names":["React","useEffect","Card","Button","CardTitle","CardText","Row","CardBody","Container","CardSubtitle","connect","useRouter","deleteItemFromCart","addItemToCart","loadItemsData","Item","props","router","id","query","console","log","item","items","filter","parseInt","name","descr","cost","cartItems","cartItem","length","mapStateToProps","state","cart"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,GAA5C,EAAiDC,QAAjD,EAA2DC,SAA3D,EAAsEC,YAAtE,QAA0F,YAA1F;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,oBAAlD;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAuC;AACnCf,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAACF,aAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMG,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,QAAMI,IAAc,GAAIJ,EAAE,IAAIF,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAoBF,IAAD,IAAoBA,IAAI,CAACJ,EAAL,KAAYO,QAAQ,CAACP,EAAE,CAAC,CAAD,CAAH,CAA3D,EAAoE,CAApE,CAAP,IAAkF,EAAzG;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,IAAI,CAACI,IAAV,CADJ,CADJ,EAII,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeJ,IAAI,CAACK,KAApB,CAJJ,EAKI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWL,IAAI,CAACM,IAAL,GAAY,GAAvB,CALJ,EAMKZ,KAAK,CAACa,SAAN,CAAgBL,MAAhB,CAAwBM,QAAD,IAAwBA,QAAQ,CAACZ,EAAT,KAAgBI,IAAI,CAACJ,EAApE,EAAwEa,MAAxE,GAAiF,CAAjF,GACG,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAYf,KAAK,CAACJ,kBAAN,CAAyBU,IAAI,CAACJ,EAA9B,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,GAKG,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAYF,KAAK,CAACH,aAAN,CAAoBS,IAApB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXR,CADJ,CADJ,CADJ,CADJ,CADJ;AAwBH;;AAED,MAAMU,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHV,IAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYA,KADhB;AAEHM,IAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWX;AAFnB,GAAP;AAIH,CALD;;AAOA,eAAeb,OAAO,CAACsB,eAAD,EAAkB;AAAElB,EAAAA,aAAF;AAAiBF,EAAAA,kBAAjB;AAAqCC,EAAAA;AAArC,CAAlB,CAAP,CAA+EE,IAA/E,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Card, Button, CardTitle, CardText, Row, CardBody, Container, CardSubtitle } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { deleteItemFromCart, addItemToCart } from '../../actions/cart';\nimport { loadItemsData } from '../../actions/items';\nimport { Item as ItemType } from '../../reducers/types';\n\nfunction Item(props: any): JSX.Element {\n    useEffect(() => {\n        props.loadItemsData();\n    }, []);\n    const router = useRouter();\n\n    const { id } = router.query;\n    console.log(id);\n    const item: ItemType = (id && props.items.filter((item: ItemType) => item.id === parseInt(id[0]))[0]) || [];\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <Card>\n                        <CardBody>\n                            <CardTitle>\n                                <h2>{item.name}</h2>\n                            </CardTitle>\n                            <CardSubtitle>{item.descr}</CardSubtitle>\n                            <CardText>{item.cost + '$'}</CardText>\n                            {props.cartItems.filter((cartItem: ItemType) => cartItem.id === item.id).length > 0 ? (\n                                <Button color=\"danger\" onClick={(): void => props.deleteItemFromCart(item.id)}>\n                                    REMOVE FROM CART\n                                </Button>\n                            ) : (\n                                <Button onClick={(): void => props.addItemToCart(item)}>ADD TO CART</Button>\n                            )}\n                        </CardBody>\n                    </Card>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        items: state.items.items,\n        cartItems: state.cart.items,\n    };\n};\n\nexport default connect(mapStateToProps, { loadItemsData, deleteItemFromCart, addItemToCart })(Item);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dima/projects/test-store/src/components/Cart/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Row, Col, Container, Table, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { deleteItemFromCart } from '../../actions/cart';\nimport InputMask from 'react-input-mask';\n\nfunction Cart(props) {\n  const totalPrice = props.items.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.cost;\n  }, 0);\n  const cartItems = props.items.map((item, key) => __jsx(\"tr\", {\n    key: item.name + key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, item.id), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, item.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, item.descr), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, item.cost), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    color: \"danger\",\n    onClick: () => props.deleteItemFromCart(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"REMOVE\"))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, \"ID\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"Item\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Description\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, \"Cost\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, \"Action\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, cartItems, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Total items: \", \"\".concat(props.items.length)), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Total price: \", \"\".concat(totalPrice, \" $\")))))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, __jsx(Label, {\n    for: \"exampleEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"Insert your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }))), __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, __jsx(Label, {\n    for: \"examplePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Phone\"), __jsx(Input, {\n    type: \"tel\",\n    mask: \"+7 (999) 999-99-99\",\n    name: \"phone\",\n    id: \"formPhone\",\n    placeholder: \"+7 (999) 999-99-99\",\n    tag: InputMask,\n    maskChar: \" \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  })))), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(Label, {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Name\"), __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"exampleAddress\",\n    placeholder: \"Joe Doe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), __jsx(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    type: \"checkbox\",\n    name: \"check\",\n    id: \"exampleCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), __jsx(Label, {\n    for: \"exampleCheck\",\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"I have agree with everything\")), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Clear Form\"), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Checkout\"))));\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    items: state.cart.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteItemFromCart\n})(Cart);","map":{"version":3,"sources":["/home/dima/projects/test-store/src/components/Cart/index.tsx"],"names":["React","Button","Row","Col","Container","Table","Form","FormGroup","Label","Input","connect","deleteItemFromCart","InputMask","Cart","props","totalPrice","items","reduce","accumulator","currentValue","cost","cartItems","map","item","key","name","id","descr","length","mapStateToProps","state","console","log","cart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Row, Col, Container, Table, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { deleteItemFromCart } from '../../actions/cart';\nimport { Item } from '../../reducers/types';\nimport InputMask from 'react-input-mask';\n\nfunction Cart(props: any): JSX.Element {\n    const totalPrice = props.items.reduce((accumulator: any, currentValue: any) => {\n        return accumulator + currentValue.cost;\n    }, 0);\n    const cartItems = props.items.map((item: Item, key: number) => (\n        <tr key={item.name + key}>\n            <td>{item.id}</td>\n            <td>{item.name}</td>\n            <td>{item.descr}</td>\n            <td>{item.cost}</td>\n            <td>\n                <Button color=\"danger\" onClick={(): void => props.deleteItemFromCart(item.id)}>\n                    REMOVE\n                </Button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Container>\n            <Row>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Item</th>\n                            <th>Description</th>\n                            <th>Cost</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {cartItems}\n                        <tr>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td>Total items: {`${props.items.length}`}</td>\n                            <td>Total price: {`${totalPrice} $`}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Row>\n            <br />\n            <Row>\n                <Form>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\">Email</Label>\n                                {/**\n                                 * email validation is already presented in reactstrap component\n                                 */}\n                                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Insert your email\" />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Phone</Label>\n                                <Input\n                                    type=\"tel\"\n                                    mask=\"+7 (999) 999-99-99\"\n                                    name=\"phone\"\n                                    id=\"formPhone\"\n                                    placeholder=\"+7 (999) 999-99-99\"\n                                    tag={InputMask}\n                                    maskChar=\" \"\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input type=\"text\" name=\"name\" id=\"exampleAddress\" placeholder=\"Joe Doe\" />\n                    </FormGroup>\n                    <FormGroup check>\n                        <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\n                        <Label for=\"exampleCheck\" check>\n                            I have agree with everything\n                        </Label>\n                    </FormGroup>\n                    <Button>Clear Form</Button>\n                    <Button>Checkout</Button>\n                </Form>\n            </Row>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    console.log(state);\n    return {\n        items: state.cart.items,\n    };\n};\n\nexport default connect(mapStateToProps, { deleteItemFromCart })(Cart);\n"]},"metadata":{},"sourceType":"module"}
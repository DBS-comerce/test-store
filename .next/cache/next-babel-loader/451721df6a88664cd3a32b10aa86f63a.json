{"ast":null,"code":"// import React from 'react';\n// import initializeStore from '../store';\n// const __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n// function getOrCreateStore(initialState) {\n//     // Always make a new store if server, otherwise state is shared between requests\n//     if (typeof window === 'undefined') {\n//         return initializeStore(initialState);\n//     }\n//     // Create store if unavailable on the client and set it on the window object\n//     if (!window[__NEXT_REDUX_STORE__]) {\n//         window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n//     }\n//     return window[__NEXT_REDUX_STORE__];\n// }\n// export default (App) => {\n//     return class AppWithRedux extends React.Component {\n//         static async getInitialProps(appContext) {\n//             // Get or Create the store with `undefined` as initialState\n//             // This allows you to set a custom default initialState\n//             const store = getOrCreateStore();\n//             // Provide the store to getInitialProps of pages\n//             appContext.ctx.store = store;\n//             return {\n//                 ...(App.getInitialProps ? await App.getInitialProps(appContext) : {}),\n//                 initialReduxState: store.getState(),\n//             };\n//         }\n//         render() {\n//             const { initialReduxState } = this.props;\n//             return <App {...this.props} store={getOrCreateStore(initialReduxState)} />;\n//         }\n//     };\n// };","map":{"version":3,"sources":["/home/dima/projects/test-store/src/lib/with-redux-store.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import initializeStore from '../store';\n\n// const __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\n// function getOrCreateStore(initialState) {\n//     // Always make a new store if server, otherwise state is shared between requests\n//     if (typeof window === 'undefined') {\n//         return initializeStore(initialState);\n//     }\n\n//     // Create store if unavailable on the client and set it on the window object\n//     if (!window[__NEXT_REDUX_STORE__]) {\n//         window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n//     }\n//     return window[__NEXT_REDUX_STORE__];\n// }\n\n// export default (App) => {\n//     return class AppWithRedux extends React.Component {\n//         static async getInitialProps(appContext) {\n//             // Get or Create the store with `undefined` as initialState\n//             // This allows you to set a custom default initialState\n//             const store = getOrCreateStore();\n\n//             // Provide the store to getInitialProps of pages\n//             appContext.ctx.store = store;\n\n//             return {\n//                 ...(App.getInitialProps ? await App.getInitialProps(appContext) : {}),\n//                 initialReduxState: store.getState(),\n//             };\n//         }\n\n//         render() {\n//             const { initialReduxState } = this.props;\n//             return <App {...this.props} store={getOrCreateStore(initialReduxState)} />;\n//         }\n//     };\n// };\n"]},"metadata":{},"sourceType":"script"}